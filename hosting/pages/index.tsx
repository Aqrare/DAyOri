import { ConnectButton } from "@rainbow-me/rainbowkit";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { Button, Input, Text } from "@chakra-ui/react";
import { useEffect, useState } from "react";
import { initializeApp } from "firebase/app";
import { getAnalytics } from "firebase/analytics";
import {
  getDatabase,
  ref,
  set,
  child,
  get,
  push,
  update,
} from "firebase/database";

const Home: NextPage = () => {
  const [email, setEmail] = useState("");
  const [daoName, setDaoName] = useState("");

  // TODO: Add SDKs for Firebase products that you want to use
  // https://firebase.google.com/docs/web/setup#available-libraries

  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  const firebaseConfig = {
    apiKey: "AIzaSyB13yJLF1ZCMI2Qr2i1CYK7WuYJhVd52EE",
    authDomain: "xobserver-47a80.firebaseapp.com",
    databaseURL: "https://xobserver-47a80-default-rtdb.firebaseio.com",
    projectId: "xobserver-47a80",
    storageBucket: "xobserver-47a80.appspot.com",
    messagingSenderId: "332844092589",
    appId: "1:332844092589:web:1c397115f0f81accc8ca24",
    measurementId: "G-EHR40Z7JTK",
  };

  // データベースの参照を作成

  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  // const analytics = getAnalytics(app);
  const database = getDatabase(app);

  const seeDB = () => {
    console.log(database);
  };

  const handleEmailChange = (e: any) => {
    const inputValue = e.target.value;
    setEmail(inputValue);
  };
  const handleDaoNameChange = (e: any) => {
    const inputValue = e.target.value;
    setDaoName(inputValue);
  };

  const resister = async () => {
    // TODO : Get contract address from Aragon DAO API
    // Resister email to Contract address table
    // TODO : Check same pair of dao and email are not resistered
    try {
      console.log("hello");
      const postData = {
        email,
      };
      const newPostKey = push(child(ref(database), "daos/" + daoName)).key;
      console.log(newPostKey);

      set(ref(database, "daos/" + daoName + "/" + newPostKey), postData);

      console.log("finish");
    } catch {
      console.log("error");
    }
  };

  const retrieve = async () => {
    const dbRef = ref(getDatabase());
    get(child(dbRef, `daos`))
      .then((snapshot) => {
        if (snapshot.exists()) {
          console.log(snapshot.val());
        } else {
          console.log("No data available");
        }
      })
      .catch((error) => {
        console.error(error);
      });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          name="description"
          content="Generated by @rainbow-me/create-rainbowkit"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header>
        <ConnectButton />
      </header>

      <main className={styles.main}>
        <Text>Hello</Text>
        <Input
          placeholder="dao name"
          size="md"
          onChange={handleDaoNameChange}
        />
        <Input
          placeholder="email address"
          size="md"
          onChange={handleEmailChange}
        />
        <Button onClick={resister}></Button>
        <Button onClick={seeDB}>DB</Button>
        <Button onClick={retrieve}>get</Button>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" target="_blank" rel="noopener noreferrer">
          Made with ❤️ by your frens at 🌈
        </a>
      </footer>
    </div>
  );
};

export default Home;
